<?xml version="1.0" encoding="UTF-8"?>

<!-- 
    //...과제24-2.E. /z09_sts372/src/main/resources/mappers/closeMapper.xml 생성.
	131p.http://www.mybatis.org/mybatis-3/getting-started.html
	아래쪽 Exploring Mapped SQL Statements 참조.
	XML Mapper를 작성할 때는 클래스의 패키지와 유사한 용도로, MyBatis내에서 원하는 SQL문을 찾을 수 있는
	namespace 설정에 가장 신경을 많이 써야 함.
	XML Mapper는 root-context.xml에서 스프링이 인식하도록 등록함.
	/zex00/src/main/webapp/WEB-INF/spring/root-context.xml
 -->
 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
 <!-- 
	MyBatis는 기본적으로 PreparedStatement를 이용해서 처리됨.
	개발자가 PreparedStatement에 들어가는 파라미터를 사용할 때는 '#{}'기호를 이용해서 처리함.
	'#{}'의 규칙.
		1. 파라미터가 여러 속성을 가진 객체인 경우 '#{num}'은 getNum() or setNum()을 의미함.
		2. 파라미터가 하나이고, 기본자료형이나 문자열인 경우 값이 그대로 전달됨.
		3. 파라미터가 Map타입인 경우 '#{num}'은 Map객체의 키값이 'num'인 값을 찾는다.
-->  

<!-- 
	패키지익스플로러에서 프로젝트 경로구조와 상관없이 개발자가 mapper태그의 namespace 속성값을
	지정한 것이 프로젝트에서 통용되는 경로명으로 인식됨.
-->
<mapper namespace="org.jone.mapper.CloseMapper">

<!-- 
	식별의 용이함을 위해 BoardMapper.xml의 각 SQL id속성값은 
	org.joywins.dao.IF_BoardDAO와 동일하게 할 것. 
-->
 <insert id="insert">
 insert into ztbl_board (bno, title, content, writer) 
 values(ZSEQ_ZTBL_BOARD.NEXTVAL, #{title},#{content}, #{writer})
 </insert>

<!--
	183p.mybatis-config.xml::typeAlias태그를 사용하면 boardMapper.xml에서 
	매번 parameterType, resultType을 패키지까지 포함된 클래스명을 작성하는 번거로움을 덜어줌. 
-->
<!-- mybatis-config.xml::typeAlias 적용전
 <select id="read" resultType="org.joywins.domain.BoardVO">
 -->
<!-- mybatis-config.xml::typeAlias 적용후 --> 
<select id="read" resultType="BoardVO"> 
 select 
   bno, title, content, writer, regdate, view_count 
 from 
   scott.ztbl_board 
 where bno = #{bno}
 </select>

 <update id="update">
 update ztbl_board set title =#{title}, content =#{content} 
 where bno = #{bno}
 </update>

 <delete id="delete">
 delete from ztbl_board where bno = #{bno}
 </delete>
    
 <select id="listAll_close009Test" resultType="EmpVO">
	 select 
	   EMPNO, ENAME, JOB 
	 from 
	   SCOTT.EMP
	 order by EMPNO desc, JOB desc
 </select>
 
<!--   A. SQL SELECT문 추가하고, 조회결과를 받을 VO 객체 생성하기.   -->
 <select id="listAll_close009" resultType="Close009VO">
	SELECT BECD.BE_NM           /* 0...소속 */
	        , STU.CUR_TEACHER   /* 1...사번 */   
		    , VI.TEACHER_NM      /* 2...교사 */ 
		    , CASE WHEN BECD.POSI_CD = '20' THEN '지국팀장' 
				  WHEN BECD.POSI_CD = '23' THEN '지국장'   
				  WHEN BECD.POSI_CD = '28' THEN '지역국장' 
				  END  AS POSI_CD_TEXT               /* 3...직책 */ 
		    , VI.CLASS_NM                                /* 4...교실 */ 
		    , VI.VISIT_CD                                   /* 5...방문코드 */ 
		    , VI.VISIT_CD_NM                              /* 6...요일 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'H',  1, 0))		AS CD_TP_LEVEL_H		/* 7...한자 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'CH', 1, 0))		AS CD_TP_LEVEL_CH	/* 8...중국어 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'B',  1, 0))		AS CD_TP_LEVEL_B		/* 9...책아이 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'BN', 1, 0))		AS CD_TP_LEVEL_BN	/* 10...신_책아이 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'M',  1, 0))		AS CD_TP_LEVEL_M		/* 11...맞춤 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'MI', 1, 0))		AS CD_TP_LEVEL_MI	/* 12...교과 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'K',  1, 0))		AS CD_TP_LEVEL_K		/* 13...국어 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'E',  1, 0))		AS CD_TP_LEVEL_E		/* 14...영어 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'BI', 1, 0))		AS CD_TP_LEVEL_BI		/* 15...북천지 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'JP', 1, 0))		AS CD_TP_LEVEL_JP		/* 16...일본어 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'HG', 1, 0))		AS CD_TP_LEVEL_HG	/* 17...장원급제  */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'EP', 1, 0))		AS CD_TP_LEVEL_EP	/* 18...세이펜영어 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'NH', 1, 0))		AS CD_TP_LEVEL_NH	/* 19...장원한국사 */
			, SUM(DECODE(C20.CD_TP_LEVEL, 'EL', 1, 0))		AS CD_TP_LEVEL_EL	/* 20...화상영어 */
			
			, SUM(DECODE(STU.ITEM_CD, NULL, 0, 1))		AS ITEM_CD					/* 21...구좌수 */
			, COUNT(DISTINCT STU.MEMBER_ID)		AS MEMBER_ID					/* 22...회원수 */
			, COUNT(DISTINCT MEM.HS_NUM)		AS HS_NUM							/* 23...가구수 */
	 FROM   TB_M10_STUDY_INFO STU
	 		   , TB_M10_MEM_INFO MEM 
			   , (SELECT TEACHER, 
					CLASS_CD, 
					TEACHER_NM, 
					CLASS_NM, 
					VISIT_CD, 
					VISIT_CD_NM 
				 FROM VI_M00A0011 
				  WHERE  USE_TP = 'Y') VI 
			   , (SELECT A.EMP_NO, A.POSI_CD, 
					A.BE_CD_2, 
					A.BE_CD_3, 
					A.BE_CD, 
					A.BE_NM, 
					(SELECT BE3 FROM VI_BENM WHERE A.BE_CD_3=BE_CD_3) B3 
				  FROM TB_M00_TEACHER_INFO A 
				 WHERE POSI_CD IN ('20','23','28') 
				   AND USE_TP = 'Y' 
				   ) BECD 
				, TB_M00_CODES020 C20 
			  WHERE STU.MEMBER_ID = MEM.MEMBER_ID 
				AND STU.CUR_OFFICE_CD = BECD.BE_CD_3 
				AND STU.CUR_TEACHER = BECD.EMP_NO 
				AND STU.CUR_TEACHER = VI.TEACHER 
				AND STU.CUR_CLASS_CD = VI.CLASS_CD 
				AND STU.STUDY_TP IN ('01','03','06','08', '11') 
				AND C20.CD_TP_ID  = 32 
				AND C20.CD_V      = STU.ITEM_CD 
			  GROUP BY BECD.B3, 
					   BECD.BE_CD,  
					   BECD.BE_NM, 
					   BECD.POSI_CD,  
					   STU.CUR_TEACHER,  
					   VI.TEACHER_NM,  
					   VI.VISIT_CD,  
					   VI.VISIT_CD_NM, 
					   VI.CLASS_NM 
		  ORDER BY BECD.B3
 </select>
  
</mapper>

